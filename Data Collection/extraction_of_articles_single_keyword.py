# -*- coding: utf-8 -*-
"""Extraction of Articles_Single Keyword.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wmafdhjV3I97DH_135POtw6qcrcM708g

# Extraction of Articles Using Event Registry with a single keyword
"""

import requests
import pandas as pd

# Define your Event Registry API key
api_key = "a6e45a4f-616a-46b2-ab77-e7b54c6435cc"

# Define the base URL for querying the Event Registry API
url = "https://eventregistry.org/api/v1/article/getArticles"

# Set up the query parameters
params = {
    "apiKey": api_key,  # Your Event Registry API Key
    "keyword": "supply chain disruption",  # Keywords to search for
    "count": 50,  # Number of results to retrieve
    "lang": "eng",  # Language of articles (English)
    "sortBy": "date",  # Sort by date (most recent first)
    "startDate": "2023-01-01",  # Start date for events
    "endDate": "2024-12-31",  # End date for events
}

# Send GET request to the API
response = requests.get(url, params=params)

# Check if the response is successful (status code 200)
if response.status_code == 200:
    data = response.json()  # Convert the response to JSON
else:
    print(f"Error: {response.status_code}")
    data = {}

# Check if the articles are in the response
if 'articles' in data and 'results' in data['articles']:
    articles = data['articles']['results']

    # Prepare lists to store article details
    titles = []
    sources = []
    urls = []
    summaries = []

    # Loop through each article to extract details
    for article in articles:
        title = article.get('title', 'No Title')
        source = article.get('source', {}).get('title', 'No Source')
        url = article.get('url', 'No URL')
        summary = article.get('body', 'No content available')  # Some articles may not have a summary

        # Append the details to the lists
        titles.append(title)
        sources.append(source)
        urls.append(url)
        summaries.append(summary)

    # Create a DataFrame to store the articles
    df = pd.DataFrame({
        'Title': titles,
        'Source': sources,
        'URL': urls,
        'Summary': summaries
    })

    # Save the data to a CSV file
    df.to_csv('supply_chain_articles.csv', index=False)
    print("Data has been saved to 'supply_chain_articles.csv'")
else:
    print("No articles found in the response.")